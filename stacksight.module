<?php

require_once('stacksight-php-sdk/SSUtilities.php');
require_once('stacksight-php-sdk/SSHttpRequest.php');
require_once('stacksight-php-sdk/SSClientBase.php');
require_once('stacksight-php-sdk/platforms/SSDrupalClient.php');

function stacksight_admin() {
	drupal_add_css(drupal_get_path('module', 'stacksight').'/css/ss-admin.css');

	$form = array();

	$form['stacksight_app'] = array(
		'#type' => 'textfield',
		'#title' => t('App'),
		'#default_value' => variable_get('stacksight_app', ''),
		'#size' => 64,
		'#maxlength' => 64,
		'#description' => t("An app name within mean network"),
		'#required' => TRUE,
	);

	$form['stacksight_token'] = array(
		'#type' => 'textfield',
		'#title' => t('Access Token'),
		'#default_value' => variable_get('stacksight_token', ''),
		'#size' => 64,
		'#maxlength' => 64,
		'#description' => t("An access token given by mean network"),
		'#required' => TRUE,
	);
	$form['#submit'][] = 'stacksight_admin_submit';

	$app_stored = variable_get('stacksight');
	if ($app_stored) {
		$form['code'] = array(
			'#markup' => theme('code_config', array('data' => array(
				'_id' => $app_stored['_id'], 
				'token' => $app_stored['token'], 
				'module_path' => drupal_get_path('module', 'stacksight'),
				'diagnostic' => stacksight_get_diagnostic($app_stored)
			)))
		);
	}

	return system_settings_form($form);
}

function stacksight_menu() {
	$items = array();

	$items['admin/config/development/stacksight'] = array(
		'title' => 'StackSight',
		'description' => 'StackSight integration module settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('stacksight_admin'),
		'access arguments' => array('administer stacksight settings'),
		'weight' => -5,
	);

	return $items;
}

function stacksight_permission() {
	return array(
		'administer stacksight settings' => array(
			'title' => t('Administer StackSight settings')
		),
	);
}

function stacksight_admin_submit($form, &$form_state) {
	$app_name = $form_state['values']['stacksight_app'];
	$token = $form_state['values']['stacksight_token'];

	$ss_client = new SSDrupalClient($token, 'drupal');
	$result = $ss_client->createApp($app_name);

	if ($result['success']) {
		if ($result['new']) drupal_set_message('The app "'.$result['data']['name'].'" created successfully');
	} else drupal_set_message($result['message'], 'error');
}

function stacksight_watchdog($log) {
	global $ss_client;

	$app_name = variable_get('stacksight_app');
	$token = variable_get('stacksight_token');

	$message = strip_tags(t($log['message'], $log['variables']));

	if ($log['type'] != 'php') {
		$data = array();
		$data['key'] = $log['type'];
		$data['name'] = $message;
		$data['data']['description'] = $message;

		switch ($log['type']) {
		    case 'content':
		        $data['design']['icon'] = 'fa-file-text';
		        $data['design']['color'] = '#8FD5FF';
		        break;
		    case 'user':
		       $data['design']['icon'] = 'fa-user';
		       $data['design']['color'] = '#8664aa';
		        break;
		    case 'php':
		    	$data['design']['icon'] = 'fa-code';
		      	$data['design']['color'] = '#990000';
		        break;
		    case 'system':
		       $data['design']['icon'] = 'fa-cubes';
		       $data['design']['color'] = '#c79696';
		        break;
		    case 'actions':
		       $data['design']['icon'] = 'fa-certificate';
		       $data['design']['color'] = '#fd8e00';
		        break;
		    case 'cron':
		       $data['design']['icon'] = 'fa-cogs';
		       $data['design']['color'] = '#de1b16';
		        break;
		    default:
		        $data['design']['color'] = '#19617a';
		        $data['design']['icon'] = 'fa-bars';
		        break;
		}

		$res = $ss_client->publishEvent($data);
	} else {
		$severity = stacksight_map_severity_level($log['severity']);
		$res = $ss_client->sendLog($message, $severity);
	}

	if (!$res['success']) SSUtilities::error_log($res['message'], 'error');
}

function stacksight_map_severity_level($drupal_sev_level) {
	$level = '';

	switch ($drupal_sev_level) {
		case WATCHDOG_ERROR:
			$level = 'error';
			break;

		case WATCHDOG_WARNING:
			$level = 'warn';
			break;

		case WATCHDOG_NOTICE:
			$level = 'info';
			break;
		
		case WATCHDOG_DEBUG:
			$level = 'log';
			break;
	}

	return $level;
}

function stacksight_uninstall() {
	variable_del('stacksight');
	variable_del('stacksight_app');
	variable_del('stacksight_token');
}

function stacksight_theme() {
	return array(
		'code_config' => array(
			'variables' => array(
				'data' => NULL
			),
			'template' => 'code_config',
		),
	);
}

function stacksight_get_diagnostic($app) {
    $list = array();

    if (!defined('STACKSIGHT_APP_ID')) {
        $list[] = t("App Id is not defined");
    } elseif (STACKSIGHT_APP_ID != $app['_id']) {
        $list[] = t("App Ids do not match");
    }

    if (!defined('STACKSIGHT_TOKEN')) {
        $list[] = t("Token is not defined<br>");
    } elseif(STACKSIGHT_TOKEN != $app['token']) {
        $list[] = t("Tokens do not match<br>"); 
    }

    if (!defined('STACKSIGHT_BOOTSTRAPED')) {
        $list[] = t("bootstrap-drupal.php is not included in settings.php<br>");
    }

    return $list;
}